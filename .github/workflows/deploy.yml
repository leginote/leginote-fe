name: Deploy to Oracle Cloud VM (on Pull Request)

on:
  workflow_dispatch:
  push:
    branches:
      - Statpan/issue6

env:
  PROJECT_DIR: /home/ubuntu/leginote-fe

jobs:
  deploy:
    runs-on: ubuntu-latest
    environment: leginote1

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Setup Node.js 20
        uses: actions/setup-node@v3
        with:
          node-version: '20'  # Node.js 20 버전 명시

      - name: Setup SSH Key
        run: |
          mkdir -p ~/.ssh
          echo "${{ secrets.LEGINOTE1_SSH_KEY }}" > ~/.ssh/leginote1_ssh_key
          chmod 600 ~/.ssh/leginote1_ssh_key

      - name: Get Host Key and Add to known_hosts
        run: |
          ssh-keyscan -H -p ${{ secrets.LEGINOTE1_PORT }} ${{ secrets.LEGINOTE1_HOST }} >> ~/.ssh/known_hosts
          chmod 600 ~/.ssh/known_hosts
      - name:  GitHub Package Registry 인증
        run: |

          # GitHub Package Registry 인증 설정
          echo "//npm.pkg.github.com/:_authToken=${GIT_AUTH_TOKEN}" > .npmrc
          chmod 600 .npmrc
      - name: Deploy to Oracle Cloud VM (Final Version)
        env:
          GIT_AUTH_TOKEN: ${{ secrets.LEGINOTE1_GIT_AUTH }}
          PROJECT_DIR: /home/ubuntu/leginote-fe

        run: |
          set -e
          set -x

        
          npm ci
          npm run build
          # rsync
          rsync -avz -e "ssh -i ~/.ssh/leginote1_ssh_key -p ${{ secrets.LEGINOTE1_PORT }} -o StrictHostKeyChecking=no" \
            --exclude='node_modules' \
            --exclude='.git' \
            --progress \
            . ${{ secrets.LEGINOTE1_USER }}@${{ secrets.LEGINOTE1_HOST }}:"${PROJECT_DIR}"

          # SSH and execute commands
          ssh -i ~/.ssh/leginote1_ssh_key \
              -o UserKnownHostsFile=~/.ssh/known_hosts \
              -o StrictHostKeyChecking=no \
              -p ${{ secrets.LEGINOTE1_PORT }} \
              ${{ secrets.LEGINOTE1_USER }}@${{ secrets.LEGINOTE1_HOST }} \
              "bash -s" << EOF
            set -e
            set -x

            cd ${PROJECT_DIR}
            pwd

            docker compose up -d --build

          EOF